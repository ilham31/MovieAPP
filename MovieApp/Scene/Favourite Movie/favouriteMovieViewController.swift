//
//  favouriteMovieViewController.swift
//  MovieApp
//
//  Created by Ilham on 21/02/20.
//  Copyright (c) 2020 ilham. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit
import SwiftMessages

protocol favouriteMovieDisplayLogic: class {
    func displaySavedMovieData(localMovieModel: [listMovieTableViewCell.ViewModel])
    func displayError(message: String)
}

class favouriteMovieViewController: UIViewController {
    var interactor: favouriteMovieBusinessLogic?
    var router: favouriteMovieRoutingLogic?
    
    private var localMovieData = [listMovieTableViewCell.ViewModel]()
    
    @IBOutlet weak var tableView: UITableView!
    
    // MARK: Object lifecycle
    
    override init(nibName nibNameOrNil: String?, bundle nibBundleOrNil: Bundle?) {
        super.init(nibName: nibNameOrNil, bundle: nibBundleOrNil)
        setup()
    }
    
    required init?(coder aDecoder: NSCoder) {
        super.init(coder: aDecoder)
        setup()
    }
    
    static func instantiate() -> favouriteMovieViewController {
        let vc = UIStoryboard(name: MovieAppConstants.Storyboard.favouriteMovie, bundle: nil).instantiateInitialViewController() as! favouriteMovieViewController
        return vc
    }
    
    // MARK: Setup
    
    private func setup() {
        let viewController = self
        let interactor = favouriteMovieInteractor()
        let presenter = favouriteMoviePresenter()
        let router = favouriteMovieRouter()
        viewController.interactor = interactor
        viewController.router = router
        interactor.presenter = presenter
        presenter.viewController = viewController
        router.viewController = viewController
    }
    
    // MARK: View lifecycle
    override func viewWillAppear(_ animated: Bool) {
        super.viewWillAppear(animated)
        interactor?.getLocalMovieData()
    }
    
    override func viewDidLoad() {
        super.viewDidLoad()
        setupNavigationItem()
        setupTableView()
    }
    
    private func setupNavigationItem() {
        navigationItem.title = "Favourite Movie"
    }
    
    private func setupTableView() {
        tableView.rowHeight = UITableView.automaticDimension
        tableView.estimatedRowHeight = 200
        tableView.delegate = self
        tableView.dataSource = self
        tableView.register(UINib(nibName: MovieAppConstants.TableViewCellNib.listMovie, bundle: nil), forCellReuseIdentifier: MovieAppConstants.TableViewCellNib.listMovie)
        tableView.tableFooterView = UIView()
    }
}

extension favouriteMovieViewController: favouriteMovieDisplayLogic {
    func displaySavedMovieData(localMovieModel: [listMovieTableViewCell.ViewModel]) {
        localMovieData = localMovieModel
        tableView.reloadData()
    }
    
    func displayError(message: String) {
        let message = MessageView.viewFromNib(layout: .messageView)
        message.configureTheme(.error)
        message.configureContent(title: MovieAppConstants.Message.Error.title, body: MovieAppConstants.Message.Error.savedMovieNotFound)
        message.button?.isHidden = true
        
        SwiftMessages.show(view: message)
    }
}

extension favouriteMovieViewController: UITableViewDelegate {
    func tableView(_ tableView: UITableView, didSelectRowAt indexPath: IndexPath) {
        router?.routeToDetailMovie(movieData: localMovieData[indexPath.row])
    }
}

extension favouriteMovieViewController: UITableViewDataSource {
    func tableView(_ tableView: UITableView, numberOfRowsInSection section: Int) -> Int {
        localMovieData.count
    }
    
    func tableView(_ tableView: UITableView, cellForRowAt indexPath: IndexPath) -> UITableViewCell {
        let cell = tableView.dequeueReusableCell(withIdentifier: MovieAppConstants.TableViewCellNib.listMovie) as! listMovieTableViewCell
        cell.updateCell(localMovieData[indexPath.row])
        cell.selectionStyle = .none
        return cell
    }
}
